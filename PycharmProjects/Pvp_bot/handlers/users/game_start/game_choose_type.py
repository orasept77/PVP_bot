from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery
from aiogram.types.inline_keyboard import InlineKeyboardButton

from keyboards.inline.callback_datas import choice_game_callback, main_menu_callback
from keyboards.inline.choose_game_menu.choose_game_type_menu import choose_game_type_menu_keyb
from loader import dp
from states.start_game import StartGame_State
from utils.db_api.create_asyncpg_connection import create_conn
from utils.db_api.deposit.deposit_repo import DepositRepo


@dp.callback_query_handler(choice_game_callback.filter(game=["–ö—Ä–µ—Å—Ç–∏–∫–∏-–ù–æ–ª–∏–∫–∏", "–ë–ª–µ–∫-–î–∂–µ–∫", "–ö–∞–º–µ–Ω—å-–ù–æ–∂–Ω–∏—Ü—ã-–ë—É–º–∞–≥–∞"]))
async def bot_choice_game(call:CallbackQuery, callback_data: dict, state: FSMContext):
    await state.update_data(game_name=callback_data.get('game'))
    await state.update_data(user_id=call.from_user.id)
    conn = await create_conn("conn_str")
    deposit_repo = DepositRepo(conn=conn)
    user_deposit = await deposit_repo.get_user_deposit(call.from_user.id)
    data = await state.get_data()
    back_button = InlineKeyboardButton("üîΩ   –ù–∞–∑–∞–¥   üîΩ", callback_data=main_menu_callback.new(menu_choice="choice_game"))
    await call.message.edit_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∏–≥—Ä—É {callback_data.get('game')}\n"
        f"–í–∞—à –¥–µ–ø–æ–∑–∏—Ç —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç [{user_deposit[2]}] —Ñ–∏—à–µ–∫.\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–∏–ø –∏–≥—Ä—ã:\n"
        f"  *–°–ª—É—á–∞–π–Ω—ã–π –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ - –≤–∞–º –±—É–¥–µ—Ç –ø–æ–¥–æ–±—Ä–∞–Ω —Å–ª—É—á–∞–π–Ω—ã–π –æ–ø–ø–æ–Ω–µ–Ω—Ç.\n"
        f"  *–ò–≥—Ä–∞—Ç—å —Å –¥—Ä—É–≥–æ–º - –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ò–î –∫–æ—Ç–æ—Ä—ã–π –≤—ã –¥–æ–ª–∂–Ω—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –≤–∞—à–µ–º—É –¥—Ä—É–≥—É.\n\n"
        f"–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é.",
        parse_mode=types.ParseMode.HTML, reply_markup=choose_game_type_menu_keyb([back_button]))
    await conn.close()

