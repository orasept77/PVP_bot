from aiogram import types
from aiogram.types import CallbackQuery
from aiogram.types.inline_keyboard import InlineKeyboardButton

from keyboards.inline.account.account_main_menu import account_menu_keyb
from keyboards.inline.callback_datas import account_main_callback, main_menu_callback

from loader import dp
from utils.db_api.create_asyncpg_connection import create_conn
from utils.db_api.deposit.deposit_repo import DepositRepo
from utils.db_api.user.user_repo import UserRepo


@dp.callback_query_handler(account_main_callback.filter(enter="true"), state="*")
async def bot_account_main(call:CallbackQuery):
    conn = await create_conn("conn_str")
    user_repo = UserRepo(conn=conn)
    deposit_repo = DepositRepo(conn=conn)
    user = await user_repo.get_user(call.from_user.id)
    if user:
        back_button = InlineKeyboardButton("üîΩ   –ù–∞–∑–∞–¥   üîΩ", callback_data=main_menu_callback.new(menu_choice="main_menu"))
        user_balance = await deposit_repo.get_user_deposit(call.from_user.id)
        await call.message.edit_text(
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç.\n\n"
            f"–î–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è:\n"
            f"–í–∞—à ID: {user['id']}\n"
            f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{user['username']}\n"
            f"–ù–∏–∫: {user['first_name']}\n\n"
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏—à–µ–∫: {user_balance[2]}\n\n"
            f"–í —ç—Ç–æ–º –º–µ–Ω—é –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –∞ —Ç–∞–∫-–∂–µ —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –Ω–∞–±—Ä–∞–Ω–Ω—ã–º –æ—á–∫–∞–º.\n"
            f"–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∞—à–µ–º—É –¥–µ–ø–æ–∑–∏—Ç—É –≤—ã–±–µ—Ä–µ—Ç–µ '–î–µ–ø–æ–∑–∏—Ç'\n"
            f"–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –∏–≥—Ä–∞—Ö –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—Å—è –Ω–µ –≤–µ—Ä–Ω–æ, –≤—ã –º–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏—Ö –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É '–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'\n\n"
            f"–í—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.",
            parse_mode=types.ParseMode.HTML, reply_markup=account_menu_keyb([back_button]))
        await conn.close()
    else:
        await call.message.answer("user not found")